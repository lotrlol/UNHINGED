// This is a minimal service worker registration that works with Vite PWA plugin
// The actual service worker is generated by the Vite PWA plugin

interface Config {
  onSuccess?: (registration: ServiceWorkerRegistration) => void;
  onUpdate?: (registration: ServiceWorkerRegistration) => void;
}

export function register(config?: Config) {
  if ('serviceWorker' in navigator) {
    window.addEventListener('load', () => {
      navigator.serviceWorker.register('/sw.js').then(
        (registration) => {
          console.log('ServiceWorker registration successful');
          
          registration.onupdatefound = () => {
            const installingWorker = registration.installing;
            if (installingWorker) {
              installingWorker.onstatechange = () => {
                if (installingWorker.state === 'installed') {
                  if (navigator.serviceWorker.controller) {
                    // New content is available
                    console.log('New content is available; please refresh.');
                    if (config?.onUpdate) {
                      config.onUpdate(registration);
                    }
                  } else {
                    // Content is now cached
                    console.log('Content is cached for offline use.');
                    if (config?.onSuccess) {
                      config.onSuccess(registration);
                    }
                  }
                }
              };
            }
          };
        },
        (error) => {
          console.error('Error during service worker registration:', error);
        }
      );
    });
  }
}

export function unregister() {
  if ('serviceWorker' in navigator) {
    navigator.serviceWorker.ready.then((registration) => {
      registration.unregister();
    });
  }
}

declare global {
  interface Window {
    workbox: any;
  }
}
